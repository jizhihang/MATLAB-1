function outData = bandStop(inData, lowStopBand, highStopBand, samplingFreq)
% band stop filter data
% filteredData = bandStop(rawData, [lowStopBandLowerLimit lowStopBandUpperLimit], [highStopBandLowerLimit highStopBandUpperLimit], samplingFrequency)
% defaults:
%   lowStopBand = [50 100] Hz
%   highStopBand = [1000 2000] Hz
%   samplingFrequency = 5000 Hz

if nargin < 2
    lowStopBand = [50 100];
end

if nargin < 3
    highStopBand = [1000 2000];
end

if nargin < 4
    samplingFreq = 5000;
end

if size(inData, 1) > size(inData, 2)
    switchOrientation = true;
    inData = inData';
else
    switchOrientation = false;
end

if any(isnan(inData))
    nanPadded = [find(~isnan(inData), 1, 'first') - 1 length(inData) - find(~isnan(inData), 1, 'last')];
    inData = inData(~isnan(inData));
else
    nanPadded = 0;
end

filterData = bandStopFilter(lowStopBand, highStopBand, samplingFreq);
outData = filter(filterData, [ones(1, numel(filterData.Numerator)*2) * inData(1) inData ones(1, numel(filterData.Numerator)*2) * inData(1)]);
outData = outData(fix(numel(filterData.Numerator)*2.5) + (1:length(inData))) + mean(inData) - mean(outData(fix(numel(filterData.Numerator)*2.5) + (1:length(inData))));

if any(nanPadded)
    outData = [nan(1, nanPadded(1)) outData nan(1, nanPadded(2))];
end

if switchOrientation
    outData = outData';
end

    function Hd = bandStopFilter(lowStopBand, highStopBand, Fs)
    %BANDSTOPFILTER Returns a discrete-time filter object.
    %
    % M-File generated by MATLAB(R) 7.0.4 and the Signal Processing Toolbox 6.3.
    % Generated on: 17-Feb-2006 21:23:21
    %
    % Equiripple Bandstop filter designed using the FIRPM function.

    Dpass1 = 0.028774368332;  % First Passband Ripple
    Dstop  = 0.001;           % Stopband Attenuation
    Dpass2 = 0.057501127785;  % Second Passband Ripple
    dens   = 20;              % Density Factor

    % Calculate the order from the parameters using FIRPMORD.
    [N, Fo, Ao, W] = firpmord([lowStopBand(1) lowStopBand(2) highStopBand(1) highStopBand(2)]/(Fs/2), [1 0 ...
                              1], [Dpass1 Dstop Dpass2]);

    % Calculate the coefficients using the FIRPM function.
    b  = firpm(N, Fo, Ao, W, {dens});
    Hd = dfilt.dffir(b);